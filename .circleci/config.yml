version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-cli: circleci/aws-cli@2.1.0

executors:
  amd64:
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    resource_class: medium
  arm64:
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    resource_class: arm.medium

jobs:
  build:
    working_directory: ~/sendbird/live_sample
    docker:
      - image: cimg/node:18.11.0
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
  build_container_image_and_push:
    executor: << parameters.architecture >>
    environment:
      AWS_ECR_REGISTRY_ID: "314716043882"
    parameters:
      architecture:
        description: architecture to build
        type: enum
        enum: ["amd64", "arm64"]
      build_path:
        description: the path to execute docker build
        type: string
      dockerfile:
        description: dockerfile name to use in docker build
        type: string
        default: Dockerfile
      repo:
        description: ECR repository name to push container image
        type: string
      aws_region:
        description: AWS region of ECR repository to push container image
        type: enum
        enum: ["us-east-1", "us-west-2"]
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - aws-ecr/build-and-push-image:
          dockerfile: << parameters.dockerfile >>
          new-profile-name: ci-ops
          path: << parameters.build_path >>
          build-path: << parameters.build_path >>
          platform: linux/<< parameters.architecture >>
          profile-name: default
          region: << parameters.aws_region >>
          repo: << parameters.repo >>
          role-arn: arn:aws:iam::314716043882:role/ci-ops
          tag: "$CIRCLE_TAG-<< parameters.architecture >>"
  push_arch_integrated_manifest:
    executor: arm64
    parameters:
      aws_region:
        description: AWS region of ECR repository to push container image
        type: enum
        enum: ["us-east-1", "us-west-2"]
      repo:
        description: ECR repository name to push container image
        type: string
    environment:
      DOCKER_CLI_EXPERIMENTAL: enabled
      ECR_REPO: 314716043882.dkr.ecr.<<parameters.aws_region>>.amazonaws.com/<<parameters.repo>>
    steps:
      - aws-cli/setup:
          profile-name: default
          configure-default-region: false
      - aws-cli/role-arn-setup:
          profile-name: ci-ops
          source-profile: default
          role-arn: arn:aws:iam::314716043882:role/ci-ops
      - run:
          name: Login in docker registry
          command: |
            aws ecr get-login-password --region <<parameters.aws_region>> --profile ci-ops | docker login --username AWS --password-stdin $ECR_REPO
      - run:
          name: Push image manifest
          command: |
            docker manifest create "$ECR_REPO:$CIRCLE_TAG" "$ECR_REPO:$CIRCLE_TAG-amd64" "$ECR_REPO:$CIRCLE_TAG-arm64"
            docker manifest push "$ECR_REPO:$CIRCLE_TAG"
  scan_credentials:
    docker:
      - image: $SEC_THOG_SCANNER_IMAGE
        aws_auth:
          aws_access_key_id: $SEC_AWS_ID_FOR_THOG_ECR
          aws_secret_access_key: $SEC_AWS_KEY_FOR_THOG_ECR
    resource_class: small
    steps:
      - run:
          name: Scan credentials
          command: sh scan.sh

workflows:
  version: 2
  build_and_push:
    jobs:
      - build:
          context: circleci-dashboard-bot
          filters: &only_version_tag_trigger
            tags:
              only: /^v.*/ # only deploy when it is release
            branches:
              ignore: /.*/
      -
        build_container_image_and_push:
          name: build_app-<<matrix.architecture>>
          filters: &only_version_tag_trigger
            tags:
              only: /^v.+/
            branches:
              ignore: /.*/
          matrix: &amd64_and_arm64_matrix
            parameters:
              architecture:
                - amd64
                - arm64
          build_path: '.'
          aws_region: us-west-2
          repo: live_studio/app
          context:
            - circleci-dashboard-bot
          requires:
            - build
      -
        push_arch_integrated_manifest:
          name: integrate_manifest_app
          filters: *only_version_tag_trigger
          requires:
            - build_app-amd64
            - build_app-arm64
          aws_region: us-west-2
          repo: live_studio/app
          context:
            - circleci-dashboard-bot
      -
        scan_credentials:
          filters: *only_version_tag_trigger
          context:
           - devsecops
          requires:
            - integrate_manifest_app
